// This is an autogenerated file, do not edit it.
// Created by tools/make_sw.py

"use strict";

// Try to ignore errors in individual files.
// If `console.error` is used to report exceptions then they are collected
// in Chromium as happened in the service worker file, not the imported
// script. `Promise.reject` trick allows to get original exception location.

importScripts(
	"background/init_linkremark.js",
);
try {
	importScripts("background/lr_force_sw_activate.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("common/bapi.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("common/lr_common.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_util.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_multimap.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_iter.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_actionlock.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_executor.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_formatter.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_format_org.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_org_buffer.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_org_tree.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_schema_org.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_meta.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("common/lr_org_protocol.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_rpc_store.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_addon_rpc.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_settings.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_export.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_clipboard.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_native_connection.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_native_export.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_scripting.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_tabframe.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_notify.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_action.js");
} catch (ex) {
	Promise.reject(ex);
}
try {
	importScripts("background/lr_schema_org_product.js");
} catch (ex) {
	Promise.reject(ex);
}
importScripts(
	"background/main_linkremark.js",
)
