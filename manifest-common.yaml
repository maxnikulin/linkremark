name: __MSG_extName__
short_name: __MSG_extShortName__
description: __MSG_extDescription__
version: 0.4.0
author: __MSG_extAuthor__
homepage_url: https://github.com/maxnikulin/linkremark
default_locale: en
icons:
  '16': icons/lr-16.png
  '24': icons/lr-24.png
  '32': icons/lr-32.png
  '48': icons/lr-48.png
  '64': icons/lr-64.png
  '128': icons/lr-128.png
options_ui:
  page: pages/lrp_settings.html
  # Do not use `browser_style` or `chrome_style` they never worked
  # consistently and have been deprecated:
  # - <https://bugzilla.mozilla.org/1827910>
  # - <https://crbug.com/973157>
  # - <https://github.com/w3c/webextensions/issues/366>
  # browser_style: true
  #
  # Do not use embedded settings page.
  # - Dialog with adaptive design is too narrow in Chromium (e.g. v110)
  #   https://crbug.com/459959
  #   "Render embedded options pages offscreen with correct CSS media view-mode"
  # - Embedded page have scroll issues in Firefox
  #   <https://bugzilla.mozilla.org/1770726>
  #   'Add-on "options_ui" page can not be scrolled from keyboard'
  #   <https://bugzilla.mozilla.org/1763419>
  #   "Extensions options fail to scroll" (2 fingers touchpad gesture)
  # - Attempt to use units relative to outer page size causes
  #   funny animation and CPU load in Firefox and Chromium (e.g. v110)
  #   <https://bugzilla.mozilla.org/1774724>
  #   "A height: 100vh element makes add-on options_ui page continuously growing"
  open_in_tab: true
permissions:
# Available in Firefox-102 mv2 extensions despite it is mv3 API
- scripting
- storage
- activeTab
- contextMenus
- webNavigation
optional_permissions:
# `clipboardWrite` allows to copy to clipboard any time.
# Added to reliably copy capture when preview page is disabled
# in extension settings. Should not be necessary in Firefox-115 ESR
# and newer since user action context is propagated to the background
# script, see <https://bugzilla.mozilla.org/1835585>.
# In Chrome mv3 extensions `navigator.clipboard` is unavailable
# in service worker and user gesture context is not propagated
# to offscreen documents. The only reliable way is `window.execCommand("copy")`
# from an offscreen document when this permission is granted.
# In Chrome mv2 extensions it is possible to
# copy using DOM command and event from background page without this permission.
# In Firefox any `await` causes lost of user action context, see
# https://bugzilla.mozilla.org/1398833
# "chrome.permissions.request needs to be called directly from input handler,
# making it impossible to check for permissions first"
# So despite the extension copies to clipboard only in response to user action,
# it is necessary to request permission to do it any time.
- clipboardWrite
- nativeMessaging
- tabs
