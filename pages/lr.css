
/* Limit content width and add optional margin color on wide screens */

html.expandable {
	/* Avoid jumps of content on debug info open due to appearance of scrollbar.
	 * Reserve 1em for scrollbar, so effective right margin with scrollbar is 0.5em,
	 * and the same margin without scrollbar is 1.5em. */
	margin-inline-start: 1rem;
	margin-inline-end: calc(1.5rem + 100% - 100vw);
}

html.expandable > body {
	/* Injected CSS (desktop theme?) could cause 1em smaller
	 * for body than for html element and result in inconsistent
	 * margins.
	 *
	 * Do not use `font-size` since it affects monospace font as well. */
	font: 1rem system-ui, sans-serif;
	background-color: white;
	color: black;
	margin: 0px auto;
	padding-block: 1rem;
	/* On narrow screen there is no room for html margin, so use body padding. */
	padding-inline: 0rem;
	max-width: 100%;
	box-sizing: border-box;
	/* Fix width for screens in the range of 44.5...46.5rem */
	width: 42rem;
	overflow-wrap: anywhere;
}

.tabContainer {
	/* for horizontal alignment without explicit height */
	display: flex;
	flex-wrap: nowrap;
}

.tabContainer > * {
	flex-grow: 0;
	flex-shrink: 0;
	background: white;
	width: 100%;
}

.tabContainer > .hideLeft {
	margin-inline-end: -100%;
	margin-inline-start: 0px;
	visibility: hidden;
}
.tabContainer > .hideRight {
	margin-inline-start: -100%;
	margin-inline-end: 0px;
	visibility: hidden;
}

@media all and (min-width: 46.5rem) {
	/* Wide enough screen to add body paddings, so margins could have color.
	 * Actual margin size depends on content width, e.g. if debug info is open
	 * or if user made textareas wider. */
	html {
		background-color: lightblue;
	}
	html.expandable > body {
		padding-inline: 1rem;
		width: 44rem;
		/* Allow debug info to consume available width */
		width: max-content;
	}

	/* Indent for collapsible details sections */
	.leftMargin {
		margin-inline-start: 2ex;
	}

	/* Content inside body.expandable that should not occupy whole width
	 * on wide screens. Outside of media selector leads to overflow for
	 * textareas when page is opened. `max-width: 100%` should be avoided
	 * to allow users to make textarea wider than screen. */
	.limitedWidth, .limitedWidthChildren > *,
	.textParameter .defaultLabel, .textParameter > * {
		width: 42rem;
	}

	/* When put outside of media selectors causes centering of paragraphs
	 * at the top of settings page in firefox. */
	.limitedWidth, .limitedWidthChildren > *,
	.textParameter, .textParameter .defaultLabel, .textParameter > * {
		margin-inline: auto;
	}

	.tabContainer > .hideLeft {
		margin-inline-end: -42rem;
		width: 42rem;
	}
	.tabContainer > .hideRight {
		margin-inline-start: -42rem;
		width: 42rem;
	}
}

/* Do not add vertical margins on low resolution laptop screens
 * and on smartphones. */
@media all and (min-height: 800px) {
	html.expandable > body {
		margin-top: 1rem;
		margin-bottom: 1rem;
	}
}

/* Center textareas if user shrinks it even on narrow screen.
 * On resize chromium adds element margin 0 property, override it.
 * It is less convenient to resize centered textarea,
 * but the alternative is textarea jumping on debug info open/close. */
textarea.limitedWidth {
	margin-inline: auto !important;
}

/* Scroll bar for user-resizable textarea. Reserve some space for focus shadow. */
.scroll {
	overflow: auto;
	margin-inline: -0.25rem;
	padding-inline: 0.25em;
	display: flex;
}
.scrollContainer, .textParameter {
	/* Override .limitedWidthChildren > * */
	width: auto;
}
.scroll > * {
	/* otherwise texarea could not be wider than window in Chrome */
	flex-shrink: 0;
}

/* Make focused element clearly distinguishable.
 * Firefox does not draw outline on preview page at all,
 * Chromium adds thick enough black solid line. */
:focus {
	outline: none;
	box-shadow: 0px 0px 2pt 2pt deepskyblue;
}

/* Emphasize whether user or default value is active by thick underline. */
div.userValue div.userInputContainer, div.defaultValue div.defaultInputContainer {
	box-shadow: 0px 5px 0px 0px steelblue;
}

div.userInputContainer, div.defaultInputContainer {
	/* Reserve space for shadow cast by active value. */
	padding-bottom: 2px;
	margin-bottom: 7px;
}

div.defaultValue .userInput {
	opacity: 0.6;
}

/* Force reset of style of input form elements.
 * Adjusting some property, e.g. background color
 * could reset other values from desktop environment defaults
 * to browser default style.
 * Chrome defaults are too heavy and black at least on linux.
 */
textarea, input:not([type]), input[type="text"] {
	border-color: lightsteelblue;
}

textarea, input:not([type]), input[type="text"], button {
	border-style: solid;
	border-width: thin;
	border-radius: 2pt;
}

textarea:read-only, input:not([type]):read-only, input[type="text"]:read-only {
	border-style: solid;
	background-color: gainsboro;
	border-color: gray;
}

button {
	padding: 1ex;
	margin: 0.75ex;
	border-color: darkgray;
}

/* Group of form fields that occupy single or two lines */
.flexLineContainer {
	display: flex;
	flex-wrap: wrap;
	flex-grow: 1;
	align-items: baseline;
}

.tabPane {
	display: flex;
	flex-direction: column;
}

.flexTabLine {
	display: flex;
	flex-wrap: wrap;
	align-items: baseline;
}

.flexGrow, .flexLineContainer > *, .flexTabLine > * {
	flex-grow: 1;
}

.flexLineContainer > .flexFixed, .flexLineContainer > .defaultLabel, .flexTabLine > .flexFixed {
	flex-grow: 0;
}

.textParameter .defaultLabel {
	display: block;
}

/* Gaps between columns of form fields */
.flexLineContainer {
	margin-inline: -0.25ex;
}

.flexLineContainer > * {
	margin-inline: 0.25ex;
}

/* Align checkbox to the left content edge in two-line layout */
input[type="checkbox"] {
	margin-left: 0px;
}

button {
	margin-inline-start: 0px;
	margin-inline-end: 1.5ex;
}

input[type="file"] {
	padding-left: 0px;
}

/* Align right textarea to right edge of content */
textarea {
	/* 0.5rem for left and right focus shadow */
	width: 100%;
	box-sizing: border-box;
	display: block;
}

button {
	min-width: 18ex;
}

/* Attempt to avoid grid layout with media queries.
 * Ensure that input labels have the same size on the preview page. */
div.fixed {
	min-width: 5ex;
}

/* Set minimum width but allow to shrink in narrow window. */
input.long {
	width: 25rem;
}


h1 {
	font-size: 1.5rem;
}

* > h1:first-child {
	/* Remove space at the top of the page */
	margin-top: 0px;
}

.error {
	background-color: #ffa0a0;
}
.warning {
	background-color: yellow;
}
pre {
	white-space: pre-wrap;
	/* Respect user font size preference despite explicit body font 1rem */
	font-size: initial;
}
.success {
	background-color: #a0ffa0;
}

ul.log > li {
	margin-top: 0.5ex;
	margin-bottom: 0.5ex;
	padding: 0.5ex;
}

ul {
	list-style: none;
	padding-left: 0px;
}

ul.tree li {
	/* Subsections withing the same file certainly should not be indented
	 * to keep line numbers aligned. Indent for tab group and file
	 * still may be considered. */
	margin-inline-start: 0pt;
}

input, textarea {
	padding-top: 0.25ex;
	padding-bottom: 0.25ex;
	padding-inline: 0.5ex;
	margin-top: 0.75ex;
	margin-bottom: 0.75ex;
}

details {
	margin-top: 1ex;
}

details.section[open] > summary, details[open] > summary .wrappedSection {
	font-size: larger;
	font-weight: bold;
}

div.p {
	margin-top: 1ex;
	margin-bottom: 1ex;
}

*.invisible {
	display: none;
}

/* Temporary to adjust size to contents */
textarea.disableFlex {
	flex-grow: 0;
	align-self: start;
}

span[role="button"] {
	cursor: pointer;
}

.lineNo, .mentionTitle, span[role="button"] .heading {
	color: #0000ee;
	text-decoration: underline;
}

.lineNo, .lineNoPad {
	/* Avoid smaller font
	 * https://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/
	 * https://code.iamkate.com/html-and-css/fixing-browsers-broken-monospace-font-handling/
	 */
	font-family: monospace, monospace;
	white-space: pre-wrap;
}

.heading {
	font-weight: bolder;
}
